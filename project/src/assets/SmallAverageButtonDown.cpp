/****************************************************************************************/
/* SmallAverageButtonDown.cpp                                                           */
/****************************************************************************************/
/* Copyright (c) 2020-2021 Muller Castro.                                               */
/*                                                                                      */
/* Permission is hereby granted, free of charge, to any person obtaining                */
/* a copy of this software and associated documentation files (the "Software"),         */
/* to deal in the Software without restriction, including without limitation            */
/* the rights to use, copy, modify, merge, publish, distribute, sublicense,             */
/* and/or sell copies of the Software, and to permit persons to whom the Software       */
/* is furnished to do so, subject to the following conditions:                          */
/*                                                                                      */
/* The above copyright notice and this permission notice shall be included in all       */
/* copies or substantial portions of the Software.                                      */
/*                                                                                      */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,  */
/* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A        */
/* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT   */
/* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF */
/* CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE */
/* OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                        */
/****************************************************************************************/

#include "assets/SmallAverageButtonDown.h"

#include <vector>

std::pair<std::string, std::string> Minesweeper::get_raw_small_average_button_down()
{
	std::pair<std::string, std::string> result = std::make_pair("SmallAverageButtonDown", "");

	std::vector<short> raw_data {

		0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a,
		0x1a, 0x0a,
		0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x1a, 0x08, 0x06, 0x00, 0x00, 0x00, 0x41, 0xca, 0xf9, 0xe5, 0x00, 0x00, 0x01, 0x86, 0x69, 0x43, 0x43, 0x50, 0x49, 0x43, 0x43, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x00, 0x00, 0x28, 0x91, 0x7d, 0x91, 0x3d, 0x48, 0xc3, 0x50, 0x14, 0x85, 0x4f, 0x53, 0x45, 0xd1, 0x4a, 0x11, 0x3b, 0x88, 0x38, 0x64, 0xa8, 0x4e, 0x16, 0x44, 0x45, 0x04, 0x17, 0xa9, 0x62, 0x11, 0x2c, 0x94, 0xb6, 0x42, 0xab, 0x0e, 0x26, 0x2f, 0xfd, 0x83, 0x26, 0x0d, 0x49, 0x8a, 0x8b, 0xa3, 0xe0, 0x5a, 0x70, 0xf0, 0x67, 0xb1, 0xea, 0xe0, 0xe2, 0xac, 0xab, 0x83, 0xab, 0x20, 0x08, 0xfe, 0x80, 0xb8, 0xb9, 0x39, 0x29, 0xba, 0x48, 0x89, 0xf7, 0x25, 0x85, 0x16, 0x31, 0x5e, 0x78, 0xbc, 0x8f, 0xf3, 0xee, 0x39, 0xbc, 0x77, 0x1f, 0x20, 0xd4, 0xcb, 0x4c, 0x35, 0x3b, 0xc6, 0x01, 0x55, 0xb3, 0x8c, 0x64, 0x2c, 0x2a, 0x66, 0xb2, 0xab, 0x62, 0xd7, 0x2b, 0x7c, 0xe8, 0x47, 0x10, 0xbd, 0x98, 0x95, 0x98, 0xa9, 0xc7, 0x53, 0x8b, 0x69, 0x78, 0xd6, 0xd7, 0x3d, 0x75, 0x53, 0xdd, 0x45, 0x78, 0x96, 0x77, 0xdf, 0x9f, 0xd5, 0xa7, 0xe4, 0x4c, 0x06, 0xf8, 0x44, 0xe2, 0x39, 0xa6, 0x1b, 0x16, 0xf1, 0x06, 0xf1, 0xf4, 0xa6, 0xa5, 0x73, 0xde, 0x27, 0x0e, 0xb1, 0xa2, 0xa4, 0x10, 0x9f, 0x13, 0x8f, 0x19, 0x74, 0x41, 0xe2, 0x47, 0xae, 0xcb, 0x2e, 0xbf, 0x71, 0x2e, 0x38, 0x2c, 0xf0, 0xcc, 0x90, 0x91, 0x4e, 0xce, 0x13, 0x87, 0x88, 0xc5, 0x42, 0x1b, 0xcb, 0x6d, 0xcc, 0x8a, 0x86, 0x4a, 0x3c, 0x45, 0x1c, 0x56, 0x54, 0x8d, 0xf2, 0x85, 0x8c, 0xcb, 0x0a,
		0xe7, 0x2d, 0xce, 0x6a, 0xb9, 0xca, 0x9a, 0xf7, 0xe4, 0x2f, 0x0c, 0xe4, 0xb4, 0x95, 0x14, 0xd7, 0x69, 0x0d, 0x23, 0x86, 0x25, 0xc4, 0x91, 0x80, 0x08, 0x19, 0x55, 0x94, 0x50, 0x86, 0x85, 0x08, 0xed, 0x1a, 0x29, 0x26, 0x92, 0x74, 0x1e, 0xf5, 0xf0, 0x0f, 0x39, 0xfe, 0x04, 0xb9, 0x64, 0x72, 0x95, 0xc0, 0xc8, 0xb1, 0x80, 0x0a,
		0x54, 0x48, 0x8e, 0x1f, 0xfc, 0x0f, 0x7e, 0xcf, 0xd6, 0xcc, 0x4f, 0x4e, 0xb8, 0x49, 0x81, 0x28, 0xd0, 0xf9, 0x62, 0xdb, 0x1f, 0x23, 0x40, 0xd7, 0x2e, 0xd0, 0xa8, 0xd9, 0xf6, 0xf7, 0xb1, 0x6d, 0x37, 0x4e, 0x00, 0xff, 0x33, 0x70, 0xa5, 0xb5, 0xfc, 0x95, 0x3a, 0x30, 0xf3, 0x49, 0x7a, 0xad, 0xa5, 0x85, 0x8f, 0x80, 0xe0, 0x36, 0x70, 0x71, 0xdd, 0xd2, 0xe4, 0x3d, 0xe0, 0x72, 0x07, 0x18, 0x7c, 0xd2, 0x25, 0x43, 0x72, 0x24, 0x3f, 0x2d, 0x21, 0x9f, 0x07, 0xde, 0xcf, 0xe8, 0x9b, 0xb2, 0xc0, 0xc0, 0x2d, 0xd0, 0xb3, 0xe6, 0xce, 0xad, 0x79, 0x8e, 0xd3, 0x07, 0x20, 0x4d, 0xb3, 0x5a, 0xbe, 0x01, 0x0e, 0x0e, 0x81, 0xd1, 0x02, 0x65, 0xaf, 0x7b, 0xbc, 0xbb, 0xbb, 0x7d, 0x6e, 0xff, 0xf6, 0x34, 0xe7, 0xf7, 0x03, 0x8d, 0xc2, 0x72, 0xb2, 0x2e, 0x44, 0xd3, 0x0a,
		0x00, 0x00, 0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0xa0, 0xbd, 0xa7, 0x93, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7, 0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xe5, 0x01, 0x11, 0x11, 0x0c, 0x0d, 0x90, 0x78, 0xc3, 0x2d, 0x00, 0x00, 0x01, 0xd6, 0x49, 0x44, 0x41, 0x54, 0x68, 0xde, 0xed, 0x5a, 0x59, 0x72, 0x83, 0x30, 0x0c, 0x95, 0x0c, 0xd3, 0xb3, 0xf9, 0x4a, 0x81, 0x4e, 0x3b, 0x4d, 0x4b, 0x72, 0x25, 0x9d, 0xad, 0x9d, 0xe2, 0x7e, 0x34, 0x80, 0x31, 0xf2, 0x46, 0x28, 0x4b, 0x23, 0xfd, 0x64, 0xe4, 0x18, 0x59, 0xd6, 0xf3, 0x93, 0x8c, 0x12, 0x04, 0x00, 0x30, 0x57, 0x10, 0xd9, 0x81, 0xe0, 0x09, 0x00, 0x3b, 0x30, 0x2e, 0x6d, 0x23, 0x11, 0xd9, 0x50, 0x2a, 0x55, 0xff, 0x82, 0x62, 0xae, 0x03, 0x18, 0x95, 0xaa, 0x8d, 0x84, 0x66, 0x7d, 0xb9, 0xb4, 0x0d, 0x76, 0xa0, 0x94, 0x16, 0x42, 0x46, 0x98, 0xb2, 0x0d, 0x33, 0x2a, 0x55, 0x9b, 0x0e, 0x14, 0xe5, 0x20, 0x25, 0x11, 0x5a, 0x9f, 0x1d, 0x23, 0x5d, 0x49, 0x48, 0xf6, 0x25, 0x02, 0x88, 0x00, 0x22, 0x12, 0x92, 0xf2, 0xde, 0x6b, 0xda, 0x91, 0x6a, 0x8f, 0xeb, 0xb3, 0xad, 0xa7, 0xec, 0x85, 0x9b, 0x7f, 0xfe, 0x7c, 0x83, 0x97, 0xa7, 0xd7, 0x2c, 0x3b, 0x8b, 0x33, 0xa4, 0x77, 0x4c, 0xfb, 0x1d, 0xdd, 0x2d, 0x18, 0x9a, 0xd1, 0x75, 0x7c, 0x2f, 0xbe, 0xf9, 0x3d, 0x18, 0x89, 0x76, 0x16, 0x67, 0xc8, 0xc8, 0x31, 0x1a, 0x3e, 0x6d, 0x07, 0x9a, 0xef, 0x0f, 0xa8, 0x8b, 0xe7, 0xd9, 0xb7, 0x0e, 0xdf, 0xc9, 0xcd, 0xd9, 0x24, 0x7b, 0x42, 0x35, 0xa3, 0xd3, 0x54, 0xef, 0xd6, 0x99, 0xac, 0xe9, 0x99, 0xef, 0x1d, 0x5f, 0xad, 0x86, 0xd8, 0x0b, 0x92, 0xb5, 0x51, 0x1d, 0x08, 0x80, 0x73, 0x82, 0x26, 0x63, 0xa9, 0x27, 0x57, 0x27, 0xd8, 0xf2, 0x9d, 0xd0, 0x58, 0x90, 0x08, 0xfc, 0x2c, 0x0a,
		0x3d, 0x4f, 0xcb, 0x31, 0xf9, 0x4f, 0x8a, 0xfa, 0x84, 0x1d, 0x1d, 0x80, 0xe4, 0x00, 0x08, 0x99, 0xe3, 0xae, 0x9d, 0x14, 0xfb, 0xb1, 0x9c, 0xce, 0x81, 0xcb, 0xad, 0xc9, 0x3d, 0x43, 0x43, 0x1d, 0xe1, 0xc6, 0x57, 0x2d, 0xea, 0xdc, 0xa6, 0x47, 0xf4, 0xe5, 0x68, 0xec, 0x91, 0x3e, 0xc5, 0xe5, 0xce, 0x87, 0xb4, 0xf9, 0x49, 0xac, 0xf0, 0x31, 0x9f, 0x22, 0x69, 0xce, 0xae, 0x23, 0x74, 0x7f, 0xca, 0x9a, 0x0f, 0x08, 0x65, 0x06, 0x23, 0xe0, 0x20, 0x22, 0xda, 0xfd, 0xb4, 0x28, 0x98, 0x6c, 0x7d, 0xa2, 0xf4, 0x1b, 0x56, 0x56, 0x5a, 0xd6, 0x09, 0x81, 0xd6, 0xcb, 0xa5, 0xad, 0xf2, 0x9e, 0x87, 0xd9, 0x42, 0xcb, 0x9d, 0x2c, 0x2e, 0x8d, 0x58, 0xdf, 0x1b, 0x63, 0x00, 0x11, 0xc3, 0xf3, 0x73, 0xc7, 0x29, 0xc0, 0x6a, 0x1d, 0x48, 0x93, 0x31, 0xa6, 0x70, 0xeb, 0xf8, 0xec, 0xac, 0x06, 0x08, 0xf1, 0x7a, 0x0f, 0xd0, 0x4d, 0x7f, 0xff, 0x3a, 0x43, 0x51, 0x14, 0xa3, 0xb1, 0x58, 0xd0, 0x5c, 0x1b, 0xc9, 0xcc, 0xa4, 0x99, 0x2c, 0x0d, 0x8c, 0x4d, 0x7c, 0xa1, 0x74, 0xdb, 0x73, 0xdf, 0x43, 0xfa, 0xf6, 0xfb, 0xad, 0xe3, 0xb8, 0xef, 0xf7, 0x08, 0xed, 0x0f, 0xdc, 0x91, 0xa5, 0x52, 0x35, 0x5c, 0xda, 0x06, 0x47, 0xed, 0xf7, 0x43, 0x08, 0x65, 0xdc, 0x9e, 0x1e, 0xad, 0x75, 0xb2, 0xb6, 0x3c, 0xca, 0x4f, 0x03, 0xd2, 0x5c, 0x14, 0x40, 0x44, 0x92, 0x01, 0x39, 0x42, 0x93, 0xf0, 0xbf, 0x89, 0x1b, 0xf3, 0xd2, 0xca, 0xd1, 0x58, 0xa9, 0xda, 0x08, 0x28, 0x9b, 0xd4, 0x47, 0x1c, 0x5d, 0x7b, 0x1f, 0xa9, 0x68, 0xee, 0x9d, 0x29, 0x08, 0x20, 0x7f, 0x94, 0xdb, 0x8b, 0xe0, 0x09, 0xe0, 0x07, 0x7e, 0x7e, 0xe5, 0x5a, 0x0f, 0x4d, 0xda, 0x25, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
	};

	for(short x : raw_data) result.second += static_cast<char>(x);

	return result;
}
